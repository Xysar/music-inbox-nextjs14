generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String        @id @default(cuid())
    name          String?
    email         String?       @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    albumReviews  AlbumReview[]
    sessions      Session[]
    trackReviews  TrackReview[]
}

model Album {
    id           String        @id
    artists      String[]
    name         String
    imageId      String?
    albumReviews AlbumReview[]
    tracks       Track[]
}

model AlbumReview {
    id      Int    @id @default(autoincrement())
    rating  Int
    text    String
    albumId String
    userId  String
    album   Album  @relation(fields: [albumId], references: [id])
    user    User   @relation(fields: [userId], references: [id])
}

model Track {
    id           String        @id
    artists      String[]
    name         String
    albumId      String
    trackReviews TrackReview[]
    album        Album         @relation(fields: [albumId], references: [id])
}

model TrackReview {
    id        Int    @id @default(autoincrement())
    timeStamp Int
    text      String
    trackId   String
    userId    String
    user      User   @relation(fields: [userId], references: [id])
    track     Track  @relation(fields: [trackId], references: [id])
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
